.\" Process this file with
.\" groff -man -Tascii foo.1
.\"
.TH TERMIT 30 "NOV 2008" Linux "User Manuals"
.SH NAME
termit \- lightweight terminal emulator
.SH SYNOPSIS
.B termit [-option ...]
.SH DESCRIPTION
.B termit
is a vte-based lightweight terminal emulator. All configuration
is done via Lua-scripts. The only other dependencies are 
Gtk+ and Vte.
.SH OPTIONS
.BR -h
or
.BR --help
.RS
Print help
.RE
.BR -v
or
.BR --version
.RS
Print version number
.RE
.BR -e
or
.BR --execute
.I cmd
.RS
Use
.I cmd
as shell
.RE
.BR -i
or
.BR --init
.I file
.RS
Use
.I file
instead of default rc.lua
.RE
.BR -n
or
.BR --name
.I name
.RS
Use
.I name
in window name hint
.RE
.BR -c
or
.BR --class
.I class
.RS
Use
.I class
in window class hint
.RE
.BR -r
or
.BR --role
.I role
.RS
Use
.I role
in window role Gtk-hint
.RE
.P
termit --execute=zsh --init=session.lua --name=TermitName --class=TermitClass --role=TermitRole
.P
.RE
.SH FILES
.I $HOME/.config/termit/rc.lua
.RS
Per user configuration file. See section
.BR "TERMIT LUA API"
for further details.
.RE
.I /usr/share/doc/termit/rc.lua.example
.RS
Example rc.lua file. Demonstrates usage of almost all available settings.
.SH "TERMIT LUA API"
.B "Functions:"

.B activateTab
(
.I tab_index
) - Activates tab by index.
    tab_index - index of tab to activate. Index of the first tab is 1.
.P
.B addMenu
(
.I menu
) - Adds menu in menubar.
    menu - table of TermitMenuItem type.
.P
.B addPopupMenu
(
.I menu
)
Adds menu in popup menu, similar to addMenu.
    menu - table of TermitMenuItem type.
.P
.B bindKey
(
.I keys
,
.I luaFunction
) - Sets new keybinding. If luaFunction is 
.I nil
removes keybinding.
    keys - string with keybinding. Available modifiers are Alt Ctrl Shift Meta Super Hyper.
    luaFunction - callback function
.P
.B bindMouse
(
.I event
,
.I luaFunction
) - Sets new mouse-binding. If luaFunction is 
.I nil
removes mouse-binding.
    event - string with one of those values: DoubleClick
    luaFunction - callback function
.P
.B closeTab
() - Closes active tab.
.P
.B copy
() - Copies selection into tab's buffer.
.P
.B currentTab
() - Returns current tab of TermitTabInfo.
.P
.B currentTabIndex
() - Returns current tab index.
.P
.B feed
(
.I
data
) - Interprets data as if it were data received from a terminal process.
.P
.B feedChild
(
.I
data
) - Sends a data to the terminal as if it were data entered by the user at the keyboard.
.P
.B findDlg
() - Opens search entry. (Enabled when build with vte version >= 0.26)
.P
.B findNext
() - Searches the next string matching search regex. (Enabled when build with vte version >= 0.26)
.P
.B findPrev
() - Searches the previous string matching search regex. (Enabled when build with vte version >= 0.26)
.P
.B forEachRow
(
.I func
) - For each terminal row in entire scrollback buffer executes function passing row as argument.
    func - function to be called.
.P
.B forEachVisibleRow
(
.I func
) - For each visible terminal row executes function passing row as argument.
    func - function to be called.
.P
.B loadSessionDlg
() - Displays "Load session" dialog.
.P
.B nextTab
() - Activates next tab.
.P
.B openTab
(
.I tabInfo
) - Opens new tab.
    tabinfo - table of TermitTabInfo with tab settings.
.P
.B paste
() - Pastes tab's buffer.
.P
.B preferencesDlg
() - Displays "Preferences" dialog.
.P
.B prevTab
() - Activates previous tab.
.P
.B quit
() - Quit.
.P
.B reconfigure
() - Sets all configurable variables to defaults and forces rereading rc.lua.
.P
.B saveSessionDlg
() - Displays "Save session" dialog.
.P
.B selection
() - Returns selected text from current tab.
.P
.B setColormap
(
.I colormap
) - Changes colormap for active tab.
    colormap - array with 8 or 16 or 24 colors.
.P
.B setEncoding
(
.I encoding
) - Changes encoding for active tab.
    encoding - string with encoding name.
.P
.B setKbPolicy
(
.I kb_policy
) - Sets keyuboard policy for shortcuts.
    kb_policy - string with one of those values:
        keycode - use hardware keyboard codes (XkbLayout-independent)
        keysym - use keysym values (XkbLayout-dependent)
.P
.B setOptions
(
.I opts
) - Changes default options.
    opts - TermitOptions table with new options.
.P
.B setTabBackgroundColor
(
.I color
) - Changes background color for active tab.
    color - string with new color.
.P
.B setTabFont
(
.I font
) - Changes font for active tab.
    font - string with new font.
.P
.B setTabForegroundColor
(
.I color
) - Changes foreground (e.g. font) color for active tab.
    color - string with new color.
.P
.B setTabTitle
(
.I tabTitle
) - Changes title for active tab.
    tabTitle - string with new tab title.
.P
.B setTabTitleDlg
() - Displays "Set tab title" dialog.
.P
.B setWindowTitle
(
.I title
) - Changes termit window title.
    title - string with new title.
.P
.B spawn
(
.I command
) - Spawns command (works via shell).
    command - string with command and arguments.
.P
.B toggleMenubar
() - Displays or hides menubar.
.P
.P
.B toggleTabbar
() - Displays or hides tabbar.
.P

.B "Types:"

.B TermitEraseBinding
- one of those string values:
    Auto - VTE_ERASE_AUTO
    AsciiBksp - VTE_ERASE_ASCII_BACKSPACE
    AsciiDel - VTE_ERASE_ASCII_DELETE
    EraseDel - VTE_ERASE_DELETE_SEQUENCE
    EraseTty - VTE_ERASE_TTY
.P
For detailed description look into Vte docs.
.P
.B TermitKeybindings
- table with predefined keybindings.
    closeTab - 'Ctrl-w'
    copy - 'Ctrl-Insert'
    nextTab - 'Alt-Right'
    openTab - 'Ctrl-t'
    paste - 'Shift-Insert'
    prevTab - 'Alt-Left'
.P
.B TermitMatch
- table for matches.
    field name - match regular expression
    field value - lua callback for action on Left-click.
.P
.B TermitMenuItem
- table for menuitems.
    accel - accelerator for menuitem. String with keybinding
    action - lua-function to execute when item activated
    name - name for menuitem
.P
.B TermitOptions
- table with termit options.
    allowChangingTitle - auto change title (similar to xterm)
    audibleBell - enables audible bell
    backgroundColor - background color
    backspaceBinding - reaction on backspace key (one of TermitEraseBinding)
    colormap - array with 8 or 16 or 24 colors
    deleteBinding - reaction on delete key (one of TermitEraseBinding)
    encoding - default encoding
    fillTabbar - expand tabs' titles to fill whole tabbar
    font - font name
    foregroundColor - foreground color
    geometry - cols x rows to start with
    getTabTitle - lua function to generate new tab title
    getWindowTitle - lua function to generate new window title
    hideMenubar - hide menubar
    hideTabbar - hide tabbar
    hideSingleTab - hide menubar when only 1 tab present
    imageFile - path to image to be set on the background
    matches - table with items of TermitMatch type
    scrollbackLines - the length of scrollback buffer
    setStatusbar - lua function to generate new statusbar message
    showScrollbar - display scrollbar
    tabName - default tab name
    tabs - table with items of TermitTabInfo type
    transparency - use transparency level [0,1]
    visibleBell - enables visible bell
    urgencyOnBell - set WM-hint 'urgent' on termit window when bell
    wordChars - word characters (double click selects word)
.P
.B TermitTabInfo
- table with tab settings:
    command
    encoding
    font - font string
    fontSize - font size
    pid - process id
    title
    workingDir
.P
.B "Globals:"

.B tabs
- table with tab settings, access specific tabs by index.
.RS
.SH EXAMPLES
Look inside provided rc.lua.example.
.SH BUGS
After start sometimes there is black screen. Resizing termit window helps.
.P
In options table 'tabs' field should be the last one. When loading all settings are applied in the same order as they are set in options table. So if you set tabs and only then colormap, these tabs would have default colormap.
.SH AUTHOR
Evgeny Ratnikov <ratnikov.ev at gmail dot com>
.SH "SEE ALSO"
.BR lua (1)
